메모하세요 ㅡ 어셈블리명령은 메모리(주기억 장치)의 내용을 레지스터에 담고 cpu에 가져와 실행을 함. 

레지스터 종류 외워두기(3장 참조)

8  AX (AH | AL)    AX 는 16비트 , AH, AL은 8비트
16 EAX
32 RAX

SREG CS, DS, SS, EZ, FS, GS(**중간기출)

MOV를 사용할떈 두개의 오퍼랜드의 사이즈가 무조건같아야함 EX) MOV destination, source -> dest = source;
(이 부분 상당히 중요하다고 언급)

------------- 약 15분 --------------

WORD는16 bit (외워두기)

BYTE 1
WORD 2바이트
DWORD 4바이트 (DOUBLE WORD) 
QWORD 8바이트

4장 7, 8page 질문받으심

------------23분 -------------

movzx 에서 zx는 예를 들어 8바이트 짜리 10001111b를 레지스터에 넣을떄, 왼쪽을 무조건 0으로 채우겠다는걸뜻함 00000000 10001111 이런식.

movsx(부호확장)는 최상위 비트로 가득 채운다 ex) 1000111 => 11111111 10001111 

MOV AX, VAL1 은 VAL1을 AX로 옮긴다는 뜻

INC AND DEC는 아무 사이즈나 와도 됨.

NEG 는 2의 보수로 바꾸는녀석임(2의 보수는 부호를 바꿈)

19장 STATUS  FlAGS 6개 암기하기

sub : 빼기

msb : 젤 앞에 있는 비트
lsb : 젤 뒤에 있는 비트

적은수에서 큰 수를 빼면 Carry Flag가 발생한다

오버 플로우나 언더 플로우가 발생하면 ;OF = 1 라고 표시됨 (4장 24p)

51P LOOP instruction ECX 꼭 체크해두기

MOV ECX,5 (5번 반복하고 싶다는 뜻)

~~~~~~,0 :,0은 NULL하겠다는 뜼


